#stages:
#  - publish
#  - deploy
#
#variables:
#  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
#  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
#
#publish:
#  stage: publish
#  image: docker:latest
#  services:
#    - docker:dind
#  script:
#    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker push $TAG_COMMIT
#    - docker push $TAG_LATEST

#deploy:
#  image: alpine:latest
#  stage: deploy
#  tags:
#    - deploy-test
#  script:
#    - chmod og= $ID_RSA
#    - apk update && apk add openssh-client
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f api || true"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d --network=vm-network --name api $TAG_COMMIT"
#  environment:
#    name: test
#    url: http://158.160.99.103
#  only:
#    - master

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deploy-test
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git config --global --add safe.directory /home/admin/trans-baza/src/api"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git -C /home/admin/trans-baza/src/api pull"
  environment:
    name: test
    url: http://158.160.99.103
  only:
    - master
